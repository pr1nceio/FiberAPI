{
    "swagger": "2.0",
    "info": {
        "title": "FruitSpace FiberAPI",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Logs in by provided credentials and returns session",
                "parameters": [
                    {
                        "description": "All fields are required",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.AuthLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.AuthLoginResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    }
                }
            }
        },
        "/auth/recover": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sends email with randomly generated password",
                "parameters": [
                    {
                        "description": "All fields are required",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.AuthRecoverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.APIBasicSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Registers new FruitSpace user",
                "parameters": [
                    {
                        "description": "All fields are required",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.AuthRegisterRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "affiliate=code",
                        "name": "Cookie",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.APIBasicSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    }
                }
            }
        },
        "/fetch/gd/info/{srvid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public stats fetching"
                ],
                "summary": "Returns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GDPS Server ID",
                        "name": "srvid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.ServerGdReduced"
                        }
                    }
                }
            }
        },
        "/payments": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Creates invoice for specified merchant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.APIPaymentListResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Creates invoice for specified merchant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "All fields are required",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.APIPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.APIPaymentResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Returns base user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.APIUserSSO"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Update username, password and 2FA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Only non-empty fields are updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.APIUserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.UserUpdateResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    }
                }
            }
        },
        "/user/avatar": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Update user profile pic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Should profile pic be reset",
                        "name": "reset",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Profile pic itself",
                        "name": "profile_pic",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.UserAvatarResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/structs.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Notification": {
            "type": "object",
            "properties": {
                "expire_date": {
                    "type": "string"
                },
                "send_date": {
                    "type": "string"
                },
                "target_uid": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_read": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.ServerGdReduced": {
            "type": "object",
            "properties": {
                "client_android_url": {
                    "type": "string"
                },
                "client_ios_url": {
                    "type": "string"
                },
                "client_macos_url": {
                    "type": "string"
                },
                "client_windows_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discord": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "is_22": {
                    "type": "boolean"
                },
                "is_custom_textures": {
                    "type": "boolean"
                },
                "level_count": {
                    "type": "integer"
                },
                "owner_id": {
                    "type": "string"
                },
                "srv_name": {
                    "type": "string"
                },
                "srvid": {
                    "type": "string"
                },
                "text_align": {
                    "type": "integer"
                },
                "user_count": {
                    "type": "integer"
                },
                "vk": {
                    "type": "string"
                }
            }
        },
        "db.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "go_pay_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "pay_id": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                }
            }
        },
        "structs.APIBasicSuccess": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "structs.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "structs.APIPaymentListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Transaction"
                    }
                }
            }
        },
        "structs.APIPaymentRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "merchant": {
                    "type": "string"
                }
            }
        },
        "structs.APIPaymentResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "pay_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "structs.APIUserSSO": {
            "type": "object",
            "properties": {
                "bal": {
                    "type": "number"
                },
                "is2fa": {
                    "type": "boolean"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Notification"
                    }
                },
                "profile_pic": {
                    "type": "string"
                },
                "reflink": {
                    "type": "string"
                },
                "servers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "shop_bal": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "top_servers": {
                    "type": "object",
                    "additionalProperties": true
                },
                "uname": {
                    "type": "string"
                }
            }
        },
        "structs.APIUserUpdateRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "totp": {
                    "type": "string"
                }
            }
        },
        "structs.AuthLoginRequest": {
            "type": "object",
            "properties": {
                "hCaptchaToken": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "uname": {
                    "type": "string"
                }
            }
        },
        "structs.AuthLoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "structs.AuthRecoverRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "hCaptchaToken": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                }
            }
        },
        "structs.AuthRegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "hCaptchaToken": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "uname": {
                    "type": "string"
                }
            }
        },
        "structs.UserAvatarResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "profile_pic": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "structs.UserUpdateResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "totp_image": {
                    "type": "string"
                },
                "totp_secret": {
                    "type": "string"
                }
            }
        }
    }
}